version: '3'
networks:
  openbinetwork: # Default network
services:
  #  elasticsearch:
  #    image: elasticsearch:7.17.12
  #    container_name: openbi-elasticsearch
  #    environment:
  #      - xpack.security.enabled=false
  #      - discovery.type=single-node
  #    healthcheck:
  #      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
  #      interval: 30s
  #      timeout: 10s
  #      retries: 5
  #    ports:
  #      - '9200:9200'
  #    restart: unless-stopped
  #    volumes:
  #      - ./.elasticsearch-data:/usr/share/elasticsearch/data # Data persistence
  #    networks:
  #      - openbinetwork
  #  kibana:
  #    image: kibana:7.17.12
  #    container_name: openbi-kibana
  #    environment:
  #      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #    ports:
  #      - '5601:5601'
  #    restart: unless-stopped
  #    depends_on:
  #      elasticsearch:
  #        condition: service_healthy
  #    networks:
  #      - openbinetwork
  #  zipkin:
  #    image: openzipkin/zipkin:2.24.3
  #    container_name: openbi-zipkin
  #    environment:
  #      STORAGE_TYPE: elasticsearch
  #      ES_HOSTS: http://elasticsearch:9200
  #    ports:
  #      - '9411:9411'
  #    restart: unless-stopped
  #    depends_on:
  #      elasticsearch:
  #        condition: service_healthy
  #    networks:
  #      - openbinetwork
  mysql:
    image: mysql:8
    container_name: openbi-mysql
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: test123456!
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    ports:
      - '3306:3306'
    restart: unless-stopped
    volumes:
      - ./.mysql-data:/var/lib/mysql # Data persistence, .mysql-data means invisible folder
      - ./mysql-init:/docker-entrypoint-initdb.d # Run init sql script
    networks:
      - openbinetwork
  redis:
    image: redis:6
    container_name: openbi-redis
    command: redis-server --save 20 1 --loglevel warning --requirepass test123456!
    ports:
      - '6379:6379'
    restart: unless-stopped
    volumes:
      - ./.redis-data:/data # Data persistence
    networks:
      - openbinetwork
  rabbitmq:
    image: rabbitmq:3.12.6-management # Support management
    container_name: openbi-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - '5672:5672'
      - '15672:15672' # Dashboard port
    restart: unless-stopped
    volumes:
      - ./.rabbitmq-data:/var/lib/rabbitmq # Data persistence
    networks:
      - openbinetwork
